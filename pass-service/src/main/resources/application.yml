spring:
  profiles:
    active: private
  datasource:
    url: ${url}
    username: ${username_}
    password: ${password}
    driver-class-name: ${driver-class-name}

  main:
    allow-circular-references: true

  jpa:
    properties:
      hibernate:
#        dialect: org.hibernate.dialect.MySQLDialect
        physical_naming_strategy: com.farmted.passservice.config.CustomCamelCaseToSnakeAndLowerCaseStrategy
    show-sql: true
    hibernate:
      ddl-auto: create

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 103819284407-g161ugj2ams4u5aosrgqvaq6lqlnimg2.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
  mvc:
    view:
      prefix: /resources/static/**
      suffix: .html
  application:
    name: pass-service
server:
  port: 0

---

#Redis
spring:
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: 5986

eureka:
  client:
    register-with-eureka: true # 유레카 서버에 등록하기
    fetch-registry: true # 유레카 서버에서 서버 상태 지속적 감시
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka # 타켓 유레카 서버

  # 인스턴스별로 유레카에 보여지는 표기를 다르게 설정함
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}